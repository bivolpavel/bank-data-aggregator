/*
 * Account Information API
 * Create Account Information Services consuming applications that offer great added value to your customers and users. Our Account Information Service will enable secure access to all European ING online accessible payment accounts.
 *
 * OpenAPI spec version: 2.5.0
 * Contact: developerportal@ing.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.paj.psd2.aggregator.client.generated.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * CounterpartyAccount
 */

public class CounterpartyAccount {

  @JsonProperty("iban")

  private String iban = null;

  @JsonProperty("bban")

  private String bban = null;

  @JsonProperty("bic")

  private String bic = null;
  public CounterpartyAccount iban(String iban) {
    this.iban = iban;
    return this;
  }

  

  /**
  * This is the IBAN of the counterparty account. Represents debtor IBAN in case of debtorAccount and creditor IBAN in case of creditorAccount
  * @return iban
  **/
  @Schema(example = "NL69INGB0123456789", description = "This is the IBAN of the counterparty account. Represents debtor IBAN in case of debtorAccount and creditor IBAN in case of creditorAccount")
  public String getIban() {
    return iban;
  }
  public void setIban(String iban) {
    this.iban = iban;
  }
  public CounterpartyAccount bban(String bban) {
    this.bban = bban;
    return this;
  }

  

  /**
  * This is the bban of the counterparty account. Represents debtor BBAN in case of debtorAccount and creditor BBAN in case of creditorAccount. This data element is only used for payment accounts which do not have an IBAN.
  * @return bban
  **/
  @Schema(example = "123456789", description = "This is the bban of the counterparty account. Represents debtor BBAN in case of debtorAccount and creditor BBAN in case of creditorAccount. This data element is only used for payment accounts which do not have an IBAN.")
  public String getBban() {
    return bban;
  }
  public void setBban(String bban) {
    this.bban = bban;
  }
  public CounterpartyAccount bic(String bic) {
    this.bic = bic;
    return this;
  }

  

  /**
  * The BIC associated to the account.
  * @return bic
  **/
  @Schema(example = "INGBNL2A", description = "The BIC associated to the account.")
  public String getBic() {
    return bic;
  }
  public void setBic(String bic) {
    this.bic = bic;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CounterpartyAccount counterpartyAccount = (CounterpartyAccount) o;
    return Objects.equals(this.iban, counterpartyAccount.iban) &&
        Objects.equals(this.bban, counterpartyAccount.bban) &&
        Objects.equals(this.bic, counterpartyAccount.bic);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(iban, bban, bic);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CounterpartyAccount {\n");
    
    sb.append("    iban: ").append(toIndentedString(iban)).append("\n");
    sb.append("    bban: ").append(toIndentedString(bban)).append("\n");
    sb.append("    bic: ").append(toIndentedString(bic)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
