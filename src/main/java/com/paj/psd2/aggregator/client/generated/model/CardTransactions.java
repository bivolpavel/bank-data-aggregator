/*
 * Account Information API
 * Create Account Information Services consuming applications that offer great added value to your customers and users. Our Account Information Service will enable secure access to all European ING online accessible payment accounts.
 *
 * OpenAPI spec version: 2.5.0
 * Contact: developerportal@ing.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.paj.psd2.aggregator.client.generated.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.paj.psd2.aggregator.client.generated.model.CardTransaction;
import com.paj.psd2.aggregator.client.generated.model.LinksNext;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;

/**
 * CardTransactions
 */

public class CardTransactions {

  @JsonProperty("booked")

  private List<CardTransaction> booked = new ArrayList<>();

  @JsonProperty("pending")

  private List<CardTransaction> pending = new ArrayList<>();

  @JsonProperty("_links")

  private LinksNext _links = null;
  public CardTransactions booked(List<CardTransaction> booked) {
    this.booked = booked;
    return this;
  }

  public CardTransactions addBookedItem(CardTransaction bookedItem) {
    this.booked.add(bookedItem);
    return this;
  }

  /**
  * Get booked
  * @return booked
  **/
  @Schema(required = true, description = "")
  public List<CardTransaction> getBooked() {
    return booked;
  }
  public void setBooked(List<CardTransaction> booked) {
    this.booked = booked;
  }
  public CardTransactions pending(List<CardTransaction> pending) {
    this.pending = pending;
    return this;
  }

  public CardTransactions addPendingItem(CardTransaction pendingItem) {
    this.pending.add(pendingItem);
    return this;
  }

  /**
  * Get pending
  * @return pending
  **/
  @Schema(required = true, description = "")
  public List<CardTransaction> getPending() {
    return pending;
  }
  public void setPending(List<CardTransaction> pending) {
    this.pending = pending;
  }
  public CardTransactions _links(LinksNext _links) {
    this._links = _links;
    return this;
  }

  

  /**
  * Get _links
  * @return _links
  **/
  @Schema(description = "")
  public LinksNext getLinks() {
    return _links;
  }
  public void setLinks(LinksNext _links) {
    this._links = _links;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CardTransactions cardTransactions = (CardTransactions) o;
    return Objects.equals(this.booked, cardTransactions.booked) &&
        Objects.equals(this.pending, cardTransactions.pending) &&
        Objects.equals(this._links, cardTransactions._links);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(booked, pending, _links);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CardTransactions {\n");
    
    sb.append("    booked: ").append(toIndentedString(booked)).append("\n");
    sb.append("    pending: ").append(toIndentedString(pending)).append("\n");
    sb.append("    _links: ").append(toIndentedString(_links)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
